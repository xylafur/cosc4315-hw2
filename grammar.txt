
<program> ::= <stmts>
<stmts> ::= <stmt> {NEWLINE <stmts>}
<stmt> ::= <expr> | <func_decl> | <stmt>{;<stmt>}

<func_call> ::= <ident>'('<ident_list>')'
<func_decl> ::= 'def' <func_call> ':' (<expr>| NEWLINE <block_stmts>)


<expr> ::= <assn> | <math> | <bool> | <print_expr>
<print_expr> ::= 'print' (<ident_list>|)
<assn> ::= <ident> '=' (<math>|<assn>)
<math> ::= <mult>(+|-)<mult> | <mult> | '('<mult>')'
<mult> ::= <term>(*|/)<term> | <term> | '('<term>')'
<term> ::= <ident> | <func_call> | <number> | {(+|-)} <term> | '('<number>')'

<ident> ::= letter {letter|digit}
<ident_list> ::= <ident> {','<ident>}
<number> ::= digit{digit}
<letter> ::= _ | (A-Z) | (a-z)
<digit> ::= 0-9

<string> ::= '"'<string_data>'"' | "'"<string_data>"'"


